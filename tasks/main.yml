---
- include: "{{ ansible_os_family }}.yml"

# Install pyenv.
- name: Git clone pyenv.
  git:
    repo: https://github.com/yyuu/pyenv.git
    dest: "{{ python_pyenv_dir }}/pyenv"

- name: Create dir.
  file:
    path: "{{ python_pyenv_dir }}/pyenv/{{ item }}"
    owner: root
    group: root
    state: directory
  with_items:
    - versions
    - shims

- name: Copy pyenv.sh.
  copy:
    src: pyenv.sh
    dest: /etc/profile.d/
    owner: root
    group: root
    mode: 0644

- name: Allow user env.
  lineinfile:
    dest: /etc/sudoers
    state: present
    backrefs: yes
    regexp: '^Defaults(.*secure_path=.*$)'
    line: '# Defaults\1'

- name: Copy sudoers settings.
  copy:
    src: sudoers_pyenv
    dest: /etc/sudoers.d/pyenv
    owner: root
    group: root
    mode: 0440

- name: Get stdout of pyenv versions.
  shell: ". /etc/profile.d/pyenv.sh; pyenv versions"
  register: python_pyenv_versions_register
  changed_when: false

- name: Show python_pyenv_versions_register.stdout
  debug:
    var: python_pyenv_versions_register.stdout

# Install python.
- name: Install python.
  shell: ". /etc/profile.d/pyenv.sh; pyenv install -v {{ python_version }}"
  when: python_pyenv_versions_register.stdout.find( python_version ) == -1

- name: Get stdout of python version.
  shell: ". /etc/profile.d/pyenv.sh; python --version"
  register: python_current_version_register
  changed_when: false

- name: Show python_current_version_register.stdout
  debug:
    var: python_current_version_register.stdout

- name: Update global python version.
  shell: ". /etc/profile.d/pyenv.sh; pyenv global {{ python_version }}"
  when: python_current_version_register.stdout.find( python_version ) == -1

# Install python modules.
- name: Get pip path.
  shell: ". /etc/profile.d/pyenv.sh; which pip"
  register: python_pip_path_register
  changed_when: false

- name: Show python_pip_path_register.
  debug:
    var: python_pip_path_register.stdout

- name: Install python modules.
  environment:
    PATH: "{{ python_pip_path_register.stdout | regex_replace('^(.*/).*$', '\\1') }}:{{ ansible_env.PATH }}"
  pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ python_pip_module }}"
